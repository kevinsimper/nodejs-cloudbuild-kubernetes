apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: nodejs-cloudbuild-kubernetes
  name: nodejs-cloudbuild-kubernetes
  namespace: default
spec:
  selector:
    matchLabels:
      app: nodejs-cloudbuild-kubernetes
  template:
    metadata:
      labels:
        app: nodejs-cloudbuild-kubernetes
    spec:
      containers:
        # - image: gcr.io/nodejs-cloudbuild-kubernetes/nodejs-cloudbuild-kubernetes:{{ .sha }}
        - image: gcr.io/nodejs-cloudbuild-kubernetes/nodejs-cloudbuild-kubernetes:6181c37a64d357125bc0ba09babab8eaef22fe76
          name: nodejs-cloudbuild-kubernetes
          ports:
            - containerPort: 9000
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-cloudbuild-kubernetes
  namespace: default
spec:
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
  selector:
    app: nodejs-cloudbuild-kubernetes
# ---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: nodejs-cloudbuild-kubernetes
#   namespace: default
#   annotations:
#     # kubernetes.io/tls-acme: "true"
#     kubernetes.io/ingress.class: "nginx"
# spec:
#   # tls:
#   # - hosts:
#   #   - echo.example.com
#   #   secretName: echoserver-tls
#   rules:
#   - host: kubernetes.cloudnative.dk
#     http:
#       paths:
#       - path: /
#         backend:
#           serviceName: nodejs-cloudbuild-kubernetes
#           servicePort: 9000
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nodejs-cloudbuild-kubernetes
  namespace: default
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - kubernetes.cloudnative.dk
    secretName: kubernetes-cloudnative-dk-tls
  rules:
  - host: kubernetes.cloudnative.dk
    http:
      paths:
      - path: /
        backend:
          serviceName: nodejs-cloudbuild-kubernetes
          servicePort: 9000
